{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","protoTypes","PropTypes","number","isRequired","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","onClick","object","App","state","statistic","this","totalStatisticCount","Number","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAU,mBAAf,UACE,4CAEA,uBAAMA,UAAU,YAAhB,mBAAmCL,KACnC,uBAAMK,UAAU,YAAhB,sBAAsCJ,KACtC,uBAAMI,UAAU,YAAhB,kBAAkCH,KAElC,gCACE,uBAAMG,UAAU,YAAhB,oBAAoCF,KACpC,uBAAME,UAAU,YAAhB,gCACsBD,EADtB,cAQRL,EAAWO,WAAa,CACtBN,KAAMO,IAAUC,OAAOC,WACvBR,QAASM,IAAUC,OAAOC,WAC1BP,IAAKK,IAAUC,OAAOC,YAGTV,QCzBTW,G,OAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKP,UAAU,UAAf,SACGQ,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLZ,UAAU,SACVa,QAASN,EAJX,SAMGI,GALIA,UAYfN,EAAgBJ,WAAa,CAC3BK,QAASJ,IAAUY,OAAOV,YAIbC,QCiCAU,G,0NApDbC,MAAQ,CACNC,UAAW,CAAEtB,KAAM,EAAGC,QAAS,EAAGC,IAAK,I,4CAWzC,WAAU,IACAoB,EAAcC,KAAKF,MAAnBC,UAEFE,EACJC,OAAOH,EAAUtB,MACjByB,OAAOH,EAAUrB,SACjBwB,OAAOH,EAAUpB,KAEbE,EACHqB,OAAOH,EAAUtB,MAAQwB,EAAuB,IAEnD,OACE,qCACE,oBAAInB,UAAU,QAAd,mCAEA,cAAC,EAAD,CACEM,QAASW,IAIX,cAAC,EAAD,CACEtB,KAAMsB,EAAUtB,KAChBC,QAASqB,EAAUrB,QACnBC,IAAKoB,EAAUpB,IACfC,MAAOqB,EACPpB,mBAAoBA,W,GAtCZsB,c,OCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77d7ce4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"Statistics-block\">\r\n      <h1>Statistics</h1>\r\n\r\n      <span className=\"Statistic\">Good: {good}</span>\r\n      <span className=\"Statistic\">Neutral: {neutral}</span>\r\n      <span className=\"Statistic\">Bad: {bad}</span>\r\n\r\n      <div>\r\n        <span className=\"Statistic\">Total: {total}</span>\r\n        <span className=\"Statistic\">\r\n          Positive Feedback: {positivePercentage}%\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.protoTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {Object.keys(options).map(key => (\r\n        <button\r\n          key={key}\r\n          type=\"button\"\r\n          className=\"Button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  //   onLeaveFeedback: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  state = {\n    statistic: { good: 1, neutral: 3, bad: 1 },\n  };\n\n  // onLeaveFeedback = id => {\n  //   this.setState(prevState => {\n  //     statistic: prevState.statistic.map(stat => {\n  //       id === indexOf(stat) ? statistic[idx] + 1 : statistic[idx];\n  //     });\n  //   });\n  // };\n\n  render() {\n    const { statistic } = this.state;\n\n    const totalStatisticCount =\n      Number(statistic.good) +\n      Number(statistic.neutral) +\n      Number(statistic.bad);\n\n    const positivePercentage =\n      (Number(statistic.good) / totalStatisticCount) * 100;\n\n    return (\n      <>\n        <h1 className=\"Title\">Please leave feedback</h1>\n\n        <FeedbackOptions\n          options={statistic}\n          // onLeaveFeedback={onLeaveFeedback}\n        ></FeedbackOptions>\n\n        <Statistics\n          good={statistic.good}\n          neutral={statistic.neutral}\n          bad={statistic.bad}\n          total={totalStatisticCount}\n          positivePercentage={positivePercentage}\n        ></Statistics>\n\n        {/* <Section title=\"\"></Section> */}\n\n        {/* <div>\n          <p>Total: {totalStatisticCount}</p>\n          <p>Кол-во выполненных: {completedTodoCount}</p>\n        </div> */}\n        {/* <TodoList todos={todos} onDeleteTodo={this.deleteTodo} /> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}