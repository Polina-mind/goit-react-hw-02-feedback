{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","options","onLeaveFeedback","map","key","type","onClick","Section","title","children","Notification","message","App","state","event","preventDefault","currentTarget","textContent","setState","prevState","this","totalStatisticCount","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TA+BeA,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACED,EAAQ,GACN,sBAAKE,UAAU,mBAAf,UACE,uBAAMA,UAAU,YAAhB,mBAAmCL,KACnC,uBAAMK,UAAU,YAAhB,sBAAsCJ,KACtC,uBAAMI,UAAU,YAAhB,kBAAkCH,KAElC,gCACE,uBAAMG,UAAU,kBAAhB,oBAA0CF,KAC1C,uBAAME,UAAU,YAAhB,gCACsBD,EADtB,cCYKE,G,MAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKH,UAAU,UAAf,SACGE,EAAQE,KAAI,SAAAC,GAAG,OACd,wBAEEC,KAAK,SACLN,UAAU,SACVO,QAASJ,EAJX,SAMGE,GALIA,UCSAG,G,MAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIV,UAAU,QAAd,SAAuBS,IACtBC,OCOQC,G,MAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKZ,UAAU,eAAf,SACE,4BAAIY,QC6CKC,E,4MA7CbC,MAAQ,CAAEnB,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCM,gBAAkB,SAAAY,GAChBA,EAAMC,iBAEN,IAAMX,EAAMU,EAAME,cAAcC,YAChC,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJf,EAAMe,EAAUf,GAAO,O,4CAK9B,WAAU,IAAD,EACwBgB,KAAKP,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjByB,EAAsB3B,EAAOC,EAAUC,EACvCE,EAAqBwB,KAAKC,MAAO7B,EAAO2B,EAAuB,KAErE,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAASuB,OAAOC,KAAKL,KAAKP,OAC1BX,gBAAiBkB,KAAKlB,oBAI1B,cAAC,EAAD,CAASM,MAAM,aAAf,SACE,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,EACPvB,mBAAoBA,MAIC,IAAxBuB,GACC,cAAC,EAAD,CAAcV,QAAQ,6B,GAvCde,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16507aa5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    total > 0 && (\r\n      <div className=\"Statistics-block\">\r\n        <span className=\"Statistic\">Good: {good}</span>\r\n        <span className=\"Statistic\">Neutral: {neutral}</span>\r\n        <span className=\"Statistic\">Bad: {bad}</span>\r\n\r\n        <div>\r\n          <span className=\"Statistic-total\">Total: {total}</span>\r\n          <span className=\"Statistic\">\r\n            Positive Feedback: {positivePercentage}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {options.map(key => (\r\n        <button\r\n          key={key}\r\n          type=\"button\"\r\n          className=\"Button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"Title\">{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className=\"Notification\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = event => {\n    event.preventDefault();\n\n    const key = event.currentTarget.textContent;\n    this.setState(prevState => {\n      return {\n        [key]: prevState[key] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalStatisticCount = good + neutral + bad;\n    const positivePercentage = Math.round((good / totalStatisticCount) * 100);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalStatisticCount}\n            positivePercentage={positivePercentage}\n          ></Statistics>\n        </Section>\n\n        {totalStatisticCount === 0 && (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}