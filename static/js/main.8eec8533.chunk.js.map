{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","protoTypes","PropTypes","number","isRequired","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","onClick","object","Notification","message","string","Section","title","App","state","event","currentTarget","textContent","setState","prevState","this","totalStatisticCount","Number","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6WAIMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACED,EAAQ,GACN,sBAAKE,UAAU,mBAAf,UACE,4CAEA,uBAAMA,UAAU,YAAhB,mBAAmCL,KACnC,uBAAMK,UAAU,YAAhB,sBAAsCJ,KACtC,uBAAMI,UAAU,YAAhB,kBAAkCH,KAElC,gCACE,uBAAMG,UAAU,YAAhB,oBAAoCF,KACpC,uBAAME,UAAU,YAAhB,gCACsBD,EADtB,cASVL,EAAWO,WAAa,CACtBN,KAAMO,IAAUC,OAAOC,WACvBR,QAASM,IAAUC,OAAOC,WAC1BP,IAAKK,IAAUC,OAAOC,YAGTV,QC3BTW,G,OAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKP,UAAU,UAAf,SACGQ,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLZ,UAAU,SACVa,QAASN,EAJX,SAMGI,GALIA,UAYfN,EAAgBJ,WAAa,CAC3BK,QAASJ,IAAUY,OAAOV,YAIbC,QCtBTU,G,OAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKhB,UAAU,eAAf,SACE,4BAAIgB,QAKVD,EAAad,WAAa,CACxBe,QAASd,IAAUe,OAAOb,YAGbW,QCTTG,G,OAAU,SAAC,GAWV,IAVLC,EAUI,EAVJA,MACAb,EASI,EATJA,QACAC,EAQI,EARJA,gBACAS,EAOI,EAPJA,QACArB,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBAGA,OACE,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBmB,IAIvB,cAAC,EAAD,CACEb,QAASA,EACTC,gBAAiBA,IAGnB,cAAC,EAAD,CAAcS,QAASA,IAEvB,cAAC,EAAD,CAEErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,SAM5BmB,EAAQjB,WAAa,CACnBkB,MAAOjB,IAAUe,OAAOb,YAGXc,QCmCAE,G,0NA1EbC,MAAQ,CAAE1B,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCU,gBAAkB,SAAAe,GAChB,IAAMX,EAAMW,EAAMC,cAAcC,YAEpB,SAARb,EACF,EAAKc,UAAS,SAAAC,GACZ,MAAO,CACL/B,KAAM+B,EAAU/B,KAAO,MAGV,YAARgB,EACT,EAAKc,UAAS,SAAAC,GACZ,MAAO,CACL9B,QAAS8B,EAAU9B,QAAU,MAGhB,QAARe,GACT,EAAKc,UAAS,SAAAC,GACZ,MAAO,CACL7B,IAAK6B,EAAU7B,IAAM,O,4CAM7B,WAAS,MAEwB8B,KAAKN,MAA5B1B,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IAEjB+B,EAAsBC,OAAOlC,GAAQkC,OAAOjC,GAAWiC,OAAOhC,GAE9DE,EAAqB+B,KAAKC,MAC7BF,OAAOlC,GAAQiC,EAAuB,KAGzC,OACE,mCACE,cAAC,EAAD,CACET,MAAM,wBACNb,QAASqB,KAAKN,MACdd,gBAAiBoB,KAAKpB,gBACtBS,SAAUY,GAAuB,oBACjCjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,EACP7B,mBAAoBA,U,GAhDZiC,c,OCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8eec8533.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    total > 0 && (\r\n      <div className=\"Statistics-block\">\r\n        <h1>Statistics</h1>\r\n\r\n        <span className=\"Statistic\">Good: {good}</span>\r\n        <span className=\"Statistic\">Neutral: {neutral}</span>\r\n        <span className=\"Statistic\">Bad: {bad}</span>\r\n\r\n        <div>\r\n          <span className=\"Statistic\">Total: {total}</span>\r\n          <span className=\"Statistic\">\r\n            Positive Feedback: {positivePercentage}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nStatistics.protoTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {Object.keys(options).map(key => (\r\n        <button\r\n          key={key}\r\n          type=\"button\"\r\n          className=\"Button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  //   onLeaveFeedback: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Notification.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className=\"Notification\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.protoTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Notification from '../Notification';\r\nimport './Section.css';\r\n\r\nconst Section = ({\r\n  title,\r\n  options,\r\n  onLeaveFeedback,\r\n  message,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  //   children,\r\n}) => {\r\n  return (\r\n    <section className=\"Section\">\r\n      <h1 className=\"Title\">{title}</h1>\r\n\r\n      {/* {children} */}\r\n\r\n      <FeedbackOptions\r\n        options={options}\r\n        onLeaveFeedback={onLeaveFeedback}\r\n      ></FeedbackOptions>\r\n\r\n      <Notification message={message}></Notification>\r\n\r\n      <Statistics\r\n        // totalStatisticCount\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={total}\r\n        positivePercentage={positivePercentage}\r\n      ></Statistics>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.protoTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\n// import Statistics from './components/Statistics';\n// import FeedbackOptions from './components/FeedbackOptions';\n// import Notification from './components/Notification';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = event => {\n    const key = event.currentTarget.textContent;\n\n    if (key === 'good') {\n      this.setState(prevState => {\n        return {\n          good: prevState.good + 1,\n        };\n      });\n    } else if (key === 'neutral') {\n      this.setState(prevState => {\n        return {\n          neutral: prevState.neutral + 1,\n        };\n      });\n    } else if (key === 'bad') {\n      this.setState(prevState => {\n        return {\n          bad: prevState.bad + 1,\n        };\n      });\n    }\n  };\n\n  render() {\n    // const { statistic } = this.state;\n    const { good, neutral, bad } = this.state;\n\n    const totalStatisticCount = Number(good) + Number(neutral) + Number(bad);\n\n    const positivePercentage = Math.round(\n      (Number(good) / totalStatisticCount) * 100,\n    );\n\n    return (\n      <>\n        <Section\n          title=\"Please leave feedback\"\n          options={this.state}\n          onLeaveFeedback={this.onLeaveFeedback}\n          message={!totalStatisticCount && 'No feedback given'}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalStatisticCount}\n          positivePercentage={positivePercentage}\n        ></Section>\n\n        {/* <h1 className=\"Title\">Please leave feedback</h1> */}\n\n        {/* <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.onLeaveFeedback}\n        ></FeedbackOptions>\n\n        <Notification\n          message={!totalStatisticCount && 'No feedback given'}\n        ></Notification>\n\n        <Statistics\n          totalStatisticCount\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalStatisticCount}\n          positivePercentage={positivePercentage}\n        ></Statistics> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}